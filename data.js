// Top-nav variant filled with your details.
window.DATA = {
  name: "Samhita Patangi",
  title: ".NET Full Stack Developer",
  email: "saamhithaa831@gmail.com",
  github: "#",
  linkedin: "#",
  resume: "Assets/Samhitha_Resume.pdf",
  photo: "Assets/photo.jpg",

  hero: "I build secure, scalable enterprise apps across healthcare, banking, and financial services using .NET, modern JS frameworks, and Azure/AWS/GCP.",
  about:
    "7 years of experience delivering high-performance products with C#, ASP.NET Core/MVC, REST APIs, microservices, and modern front-end frameworks (Angular/React/Blazor). Strong with SQL performance, CI/CD automation, and cloud (Azure, AWS, GCP).",

  highlights: [
    "Designed event-driven, real-time features with SignalR and Kafka",
    "Hands-on with Azure AKS/App Service, Service Bus, Functions, API Mgmt",
    "CI/CD automation via Azure DevOps, GitHub Actions; Docker & Kubernetes",
    "Reporting & analytics with SSRS/Power BI; strong SQL optimization",
  ],

  myStack: [
    ".NET",
    "C#",
    "ASP.NET Core",
    "Entity Framework",
    "SQL Server",
    "Azure",
    "Docker",
    "Kubernetes",
    "React",
    "Angular",
    "Blazor",
  ],

  experience: [
    {
      role: "Sr. Full Stack Developer",
      company: "Palo Alto Networks (Healthcare platform)",
      location: "Texas, USA",
      start: "Jan 2024",
      end: "Present",
      points: [
        "Built a health insurance claims platform: WHCRT (ASP.NET Web Forms) for submissions and provider workflows; PHClaims (ASP.NET MVC) for reporting and analytics.",
        "Embedded AI Assistant chatbot UI with JavaScript + SignalR; role-based experiences for claimants/providers/admins.",
        "Integrated Medical IoT Security & Zero Trust to protect IoMT devices; streamed telemetry via Kafka to analytics services.",
        "Developed secure APIs and optimized data access with EF/LINQ + SQL Server; added MongoDB for event logging.",
        "Implemented structured logging (NLog), environment-specific configs, and CI/CD with Azure DevOps.",
        "Deployed on Azure App Service using Terraform; added hybrid GCP (GKE, Pub/Sub) for resiliency and logging.",
      ],
      stack: [
        "C#",
        "ASP.NET Web Forms/MVC",
        "EF Core",
        "SQL Server",
        "MongoDB",
        "SignalR",
        "Kafka",
        "Azure",
        "GCP",
        "NLog",
        "Terraform",
      ],
    },
    {
      role: "Software Developer",
      company: "Franklin Templeton",
      location: "Hyderabad, India",
      start: "Sep 2021",
      end: "Jul 2023",
      points: [
        "Built React dashboards and real-time visualizations with SignalR for portfolio and mutual fund views.",
        "Migrated VB6/C++/PLSQL modules to Angular & C# Web API; improved maintainability and performance.",
        "Optimized complex SQL Server queries/procs; added Python automations for ETL and reconciliation.",
        "Integrated Apache Kafka for streaming market/trade events; improved throughput and lowered latency.",
        "Deployed microservices on Azure AKS; automated CI/CD with Azure DevOps and YAML; added Service Bus.",
        "Implemented monitoring with Splunk and App Insights; tuned autoscaling and cloud costs.",
      ],
      stack: [
        "C#",
        ".NET Core 6",
        "Web API",
        "React",
        "Angular",
        "SQL Server",
        "Snowflake",
        "Kafka",
        "Azure AKS",
        "Azure DevOps",
        "Service Bus",
        "MSTest",
        "PowerShell",
        "YAML",
      ],
    },
    {
      role: ".NET Backend Developer",
      company: "FNB Corporation",
      location: "USA",
      start: "Jan 2020",
      end: "Aug 2021",
      points: [
        "Developed Blazor Server UI for regulatory submissions with SignalR-based review workflows.",
        "Implemented CQRS handlers, REST endpoints, EF Core models, and scheduled workers for ETL and packaging.",
        "Added auditing, data lineage, encryption/masking, and legal-hold tagging; generated regulator-ready exports.",
        "Deployed Web/API/Workers to Azure (App Service/AKS); wired Service Bus; set up YAML pipelines and App Insights.",
      ],
      stack: [
        ".NET 8",
        "ASP.NET Core Web API",
        "Blazor Server",
        "EF Core",
        "SQL Server 2019",
        "Azure Service Bus",
        "AKS",
        "Azure DevOps",
        "MediatR",
        "AutoMapper",
        "SignalR",
        "Hangfire",
        "Key Vault",
        "Terraform/Bicep",
      ],
    },
    {
      role: ".NET Software Engineer",
      company: "Tangentia",
      location: "Hyderabad, India",
      start: "Jun 2018",
      end: "Jan 2019",
      points: [
        "Developed Angular modules with secure auth flows against .NET APIs; improved UX with Material + reactive forms.",
        "Built REST APIs and automated workflows with Power Automate; deployed on Azure with IIS hosting.",
        "Streamlined releases using Azure DevOps and PowerShell; added monitoring and access control.",
      ],
      stack: [
        ".NET Framework",
        "C#",
        "Entity Framework",
        "SQL Server",
        "Angular",
        "IIS",
        "Azure",
        "NUnit",
        "Autofac",
        "Azure DevOps",
      ],
    },
  ],

  education: [
    {
      degree: "M.S., Computer Science",
      school: "Northern Arizona University",
      location: "Flagstaff, AZ",
      start: "2023",
      end: "2024",
      notes: "",
    },
    {
      degree: "B.Tech, Computer Science",
      school: "JNTUH",
      location: "Hyderabad, India",
      start: "2016",
      end: "2020",
      notes: "",
    },
  ],

  projects: [
    {
      name: "Health Claims Platform (WHCRT & PHClaims)",
      tagline: "Claims workflows, reporting, and IoMT security",
      desc: "End-to-end claims management with provider admin, MOA workflows, analytics, and real-time chat; integrated Zero Trust for IoMT devices and Kafka streaming.",
      tags: [
        ".NET",
        "MVC/Web Forms",
        "SQL Server",
        "MongoDB",
        "SignalR",
        "Kafka",
        "Azure",
        "GCP",
      ],
    },
    {
      name: "Portfolio Management & Real-Time Dashboards",
      tagline: "Franklin Templeton",
      desc: "Unified portfolio views across acquisitions with React + SignalR, .NET Core APIs, SQL/Snowflake, Kafka, and Azure AKS.",
      tags: [
        "React",
        "SignalR",
        ".NET Core",
        "SQL Server",
        "Snowflake",
        "Kafka",
        "AKS",
      ],
    },
    {
      name: "Regulatory Data Submission Platform",
      tagline: "FNB Corporation",
      desc: "Blazor Server + .NET APIs with CQRS, auditing, lineage, encryption/masking, and Azure Service Bus; generated regulator-ready artifacts.",
      tags: ["Blazor", ".NET", "EF Core", "SQL Server", "Azure", "Service Bus"],
    },
  ],

  skills: [
    "C#",
    "VB.NET",
    ".NET Core 2.2–8",
    ".NET Framework 4.5–4.8",
    "ASP.NET MVC",
    "Web API",
    "Entity Framework/Core",
    "React",
    "Angular (v7–16)",
    "Blazor",
    "Razor",
    "JavaScript",
    "TypeScript",
    "SignalR",
    "REST",
    "Microservices",
    "WCF",
    "LINQ",
    "Autofac",
    "MediatR",
    "SQL Server",
    "Azure SQL",
    "PostgreSQL",
    "MongoDB",
    "Oracle",
    "PL/SQL",
    "Snowflake",
    "Azure (App Service, AKS, Service Bus, Functions, Storage, APIM, Key Vault)",
    "AWS (ECS, Lambda, S3)",
    "GCP (GKE, Pub/Sub)",
    "Docker",
    "Kubernetes",
    "Terraform",
    "Bicep",
    "Azure DevOps",
    "GitHub Actions",
    "MSTest",
    "NUnit",
    "xUnit",
    "Selenium",
    "Postman",
    "JMeter",
    "Swagger",
    "SSRS",
    "Power BI",
    "SSIS",
    "Crystal Reports",
    "IIS",
    "SonarQube",
    "Splunk",
    "IBM MQ",
  ],
};
